<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Handler on Zac&#39;s blog</title>
    <link>https://zacash.cn/categories/handler/</link>
    <description>Recent content in Handler on Zac&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Copyright © 2022, Copyright Zac
</copyright>
    <lastBuildDate>Sun, 12 Apr 2020 20:36:33 +0800</lastBuildDate><atom:link href="https://zacash.cn/categories/handler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handler in Details</title>
      <link>https://zacash.cn/posts/handler-in-code/</link>
      <pubDate>Sun, 12 Apr 2020 20:36:33 +0800</pubDate>
      
      <guid>https://zacash.cn/posts/handler-in-code/</guid>
      <description>Handler 的创建  在主线程(UI Thread)中：  class MainActivity: Activity {  private val mLeakedHandler = object: Handler(Looper.getMainLooper()) {  override fun handleMessage(msg: Message) {  super.handleMessage(msg)  }  } }  在子线程中：  val thread = object: Thread() {  override fun run() {  val looper = Looper.prepare()  val handler = object: Handler(Looper.myLooper()) {  override fun handleMessage(msg: Message) {  super.handleMessage(msg)  }  }  Looper.loop()  } } 为什么在子线程创建 Handler 需要准备 Looper，而主线程却不用 因为 ActivityThread 中的 main() 方法已经为我们初始化了 Looper</description>
    </item>
    
  </channel>
</rss>
